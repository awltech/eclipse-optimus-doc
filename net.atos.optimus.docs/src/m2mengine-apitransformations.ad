:title: Writing your own transformations

[cols="a,10a"]
|===
|image:./images/optimus-logo.png[height="128"]|[headertitle]#API for writing Java transformations#
|===

''''

== Purpose

We present in these pages how to write transformations with the fluent API, available since Optimus 1.2, in the plugin *net.atos.optimus.m2m.javaxmi.operation*.
This API propose a high level abstraction of the Java Abstract Syntax Tree used by modisco. 
So, the API enables to manipulate concept of the Java language by encapsulate AST object, accessible by the *getDelegate()* method.

The javadoc of the API is available link:http://eclipse.worldline.com/javadoc/optimus/m2t-operations/[here]

We describe how to generate the different elements of the Java language with sample code and we show the associated code produced. 

There may have three ways to write transformations :

	* Use static method in helper for a full customization of the generated Java element.
	* Build the concept with helper and take profit of some default behaviors.
	* Customize directly the created Java element.

We can generate the following elements of the Java language :

* link:./m2mengine-apitransformations-abstract-class.html[Package, class, interface, enumeration and import]
* link:./m2mengine-apitransformations-abstract-method.html[Field, constructor and method]
* link:./m2mengine-apitransformations-instruction.html[Instruction]
* link:./m2mengine-apitransformations-attachment.html[Javadoc, comment and annotation]
* link:./m2mengine-apitransformations-advanced.html[Advanced user]

Below, the class diagram of the API elements :

image: images/m2mengine-apitransformations/m2m-img01.png[]

''''